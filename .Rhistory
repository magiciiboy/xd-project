col_t_deflated_nih[col_t_deflated_nih==0] <- ZERO_REPLACEMENT_CONSTANT_AMT
dat$t_deflated_nih <- col_t_deflated_nih
# Rename the column name
dat$C_i <- dat$t_pubs_citations
dat$r_i <- dat$SchoolRank
dat$dollar_NSF <- dat$t_deflated_nsf
dat$dollar_NIH <- dat$t_deflated_nih
dat$C_PR <- dat$PRCentrality
dat$C_B <- dat$BetCentrality
dat$C_D <- dat$KDirect
dat$O <- dat$XDIndicator
# Remove old columns
# dat$t_pubs_citations <- NULL
# dat$SchoolRank <- NULL
# dat$t_deflated_nsf <- NULL
# dat$t_deflated_nih <- NULL
# dat$PRCentrality <- NULL
# dat$BetCentrality <- NULL
# Build models
# str(dat)
# Model a: CV-Net with PageRank Centrality (without standardized)
# Remove row having NA (Ex: pagerank). Only keep 3900 nodes in the network.
datNet <- dat %>% filter(C_PR > 0)
print(nrow(datNet))
model_a <- lm(log(C_i) ~ log(r_i) + log(h_index) + log(dollar_NSF)
+ log(num_nsf) + log(dollar_NIH) + log(num_nih)
+ log(C_PR) + Chi
+ factor(O) + factor(Y05yr), data=datNet)
summary(model_a)
# Model b: CV-Net with Betweeness Centrality (without standardized)
datNet <- dat %>% filter(C_B > 0)
print(nrow(datNet))
model_b <- lm(log(C_i) ~ log(r_i) + log(h_index) + log(dollar_NSF)
+ log(num_nsf) + log(dollar_NIH) + log(num_nih)
+ log(C_B) + Chi
+ factor(O) + factor(Y05yr), data=datNet)
summary(model_b)
# Model c: CV-Net with Degree Centrality (without standardized)
datNet <- dat %>% filter(C_D > 0)
print(nrow(datNet))
model_c <- lm(log(C_i) ~ log(r_i) + log(h_index) + log(dollar_NSF)
+ log(num_nsf) + log(dollar_NIH) + log(num_nih)
+ log(C_D) + Chi
+ factor(O) + factor(Y05yr), data=datNet)
summary(model_c)
# Model d: CV-Net with PageRank Centrality and without N1, N2 (without standardized)
datNet <- dat %>% filter(C_PR > 0)
print(nrow(datNet))
model_d <- lm(log(C_i) ~ log(r_i) + log(h_index)
+ log(dollar_NSF) + log(dollar_NIH)
+ log(C_PR) + Chi
+ factor(O) + factor(Y05yr), data=datNet)
summary(model_d)
# Model d: CV-Net with PageRank Centrality and without School rank (without standardized)
datNet <- dat %>% filter(C_PR > 0)
print(nrow(datNet))
model_e <- lm(log(C_i) ~ log(h_index)
+ log(dollar_NSF) + log(num_nsf)
+ log(dollar_NIH) + log(num_nih)
+ log(C_PR) + Chi
+ factor(O) + factor(Y05yr), data=datNet)
summary(model_e)
dat <- read.csv('./data/Faculty_GoogleScholar_Funding_Data_N4190.csv')
head(dat)
max(dat$t_deflated_nih)
# install.packages('plm')
# install.packages('sjstats')
library(sjstats)
library(plm)
library(dplyr)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
# str(dat)
nrow(dat)
model_FE <- plm(z ~ ln_a + tau + I + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
model_FE <- plm(z ~ ln_a + tau + I + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
summary(model_FE)
# Model: FE (Standardized)
model_FE_std <- plm(z ~ scale(ln_a) + scale(tau) + scale(I) + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
summary(model_FE_std)
# install.packages('plm')
# install.packages('sjstats')
library(sjstats)
library(plm)
library(dplyr)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
# str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + PR + lamda, data=dat)
# summary(dat)
str(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + PR + lamda + factor(dept), data=dat)
summary(model_NoFE)
# Model: FE (Standardized)
model_FE_std <- plm(z ~ scale(ln_a) + scale(tau) + scale(I) + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
nrow(dat$ln_a)
dat$ln_a
len(dat$ln_a)
lenght(dat$ln_a)
length(dat$ln_a)
length(dat$I)
length(dat$tau)
scale(dat$ln_a)
dat %>% mutate(ln_a_scaled=scale(dat$ln_a),
tau_scaled=scale(dat$tau),
I_scaled=scale(dat$I))
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I_scaled + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
str(dat)
# Model: FE (Standardized)
dat %>% mutate(ln_a_scaled=scale(dat$ln_a))
str(dat)
# Model: FE (Standardized)
dat$ln_a_scaled <- scale(dat$ln_a)
str(dat)
dat$ln_a_scaled
# Model: FE (Standardized)
dat$ln_a_scaled <- NULL
dat <- dat %>% mutate(ln_a_scaled=scale(dat$ln_a),
tau_scaled=scale(dat$tau),
I_scaled=scale(dat$I))
str(dat)
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I_scaled + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
summary(model_FE_std)
Oneway (individual) effect Within Model
# Call:
# plm(formula = z ~ ln_a_scaled + tau_scaled + I_scaled + factor(t),
#     data = dat, effect = "individual", model = "within", index = c("i",
#         "X"))
# Unbalanced Panel: n = 1247, T = 3-1388, N = 166621
# Residuals:
#      Min.   1st Qu.    Median   3rd Qu.      Max.
# -3.612039 -0.630061  0.031691  0.635723  5.373274
# Coefficients: (1 dropped because of singularities)
#                 Estimate Std. Error t-value  Pr(>|t|)
# ln_a_scaled    0.2523839  0.0028171 89.5899 < 2.2e-16 ***
# tau_scaled    -0.0662938  0.0271938 -2.4378 0.0147768 *
# I_scaled       0.0170185  0.0024670  6.8985 5.276e-12 ***
# (Note: Coefficients of dummy variable t are removed for shortenning)
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
# Total Sum of Squares:    156870
# Residual Sum of Squares: 149220
# R-Squared:      0.048815
# Adj. R-Squared: 0.041376
# F-statistic: 180.524 on 47 and 165327 DF, p-value: < 2.22e-16
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
summary(model_FE_std)
# Model: FE
# lmer
model_FE <- plm(z ~ ln_a + tau + I + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
summary(model_FE)
interception_FE <- mean(fixef(model_FE))
print(paste0('Interception: ', interception_FE))
# install.packages('plm')
# install.packages('sjstats')
library(sjstats)
library(plm)
library(dplyr)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + PR + lamda + factor(dept), data=dat)
# Model: FE
# lmer
model_FE <- plm(z ~ ln_a + tau + I + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
summary(model_FE)
# Model: FE
# lmer
model_FE <- plm(z ~ ln_a + tau + I + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE)
interception_FE <- mean(fixef(model_FE))
print(paste0('Interception: ', interception_FE))
# Model: FE
# lmer
dat$t02yr <- cut(dat$t, breaks = (max(dat$t) - min(dat$t)) / 2)
dat$t02yr
# Model: FE
# lmer
dat$t02yr <- cut(dat$t, breaks = (max(dat$t) - min(dat$t)) / 2)
model_FE <- plm(z ~ ln_a + tau + I + factor(t02yr), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE)
interception_FE <- mean(fixef(model_FE))
print(paste0('Interception: ', interception_FE))
# Model: FE
# lmer
model_FE <- plm(z ~ ln_a + tau + I + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE)
interception_FE <- mean(fixef(model_FE))
print(paste0('Interception: ', interception_FE))
# Model: FE (Standardized)
dat <- dat %>% mutate(ln_a_scaled=scale(dat$ln_a),
tau_scaled=scale(dat$tau),
I_scaled=scale(dat$I))
anova(model_FE)
within_intercept(model_FE)
pvar(model_FE)
# install.packages('plm')
# install.packages('sjstats')
install.packages("robustHD")
dat <- dat %>% mutate(ln_a_scaled=standardize(dat$ln_a),
tau_scaled=standardize(dat$tau),
I_scaled=standardize(dat$I))
help(standardize)
help("standardize")
library(arm)
standardize
help(standardize)
dat <- dat %>% mutate(ln_a_scaled=standardize(dat$ln_a),
tau_scaled=standardize(dat$tau),
I_scaled=standardize(dat$I))
library(robustHD)
standardize
dat <- dat %>% mutate(ln_a_scaled=standardize(dat$ln_a),
tau_scaled=standardize(dat$tau),
I_scaled=standardize(dat$I))
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I + factor(t), data=dat, index=c("i", "X"), model="within", effect="individual")
summary(model_FE_std)
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE_std)
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I_scaled + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE_std)
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE_std)
within_intercept(model_FE_std)
dat <- dat %>% mutate(ln_a_scaled=scale(dat$ln_a),
tau_scaled=scale(dat$tau),
I_scaled=scale(dat$I))
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE_std)
summary(model_FE_std)
within_intercept(model_FE_std)
# install.packages('plm')
# install.packages('sjstats')
library(sjstats)
library(plm)
library(dplyr)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_all.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank). Only keep 3900 nodes in the network.
dat <- na.omit(dat)
print(nrow(dat))
# Model: FE
model_FE <- plm(z ~ ln_a + tau + I + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE)
within_intercept(model_FE)
dat <- dat %>% mutate(ln_a_scaled=scale(dat$ln_a),
tau_scaled=scale(dat$tau),
I_scaled=scale(dat$I))
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I_scaled + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE_std)
model_FE_std <- plm(z ~ ln_a_scaled + tau_scaled + I + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE_std)
within_intercept(model_FE_std)
library(sjstats)
library(plm)
library(dplyr)
library(robustHD)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd_PYTHON.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + PR + lamda + factor(dept), data=dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + PR + ln(lamda) + factor(dept), data=dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + PR + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
anova(model_NoFE)
library(sjstats)
library(plm)
library(dplyr)
library(robustHD)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd_A.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
# Model: FE
# lmer
model_FE <- plm(z ~ ln_a + tau + I + factor(t), data=dat, index=c("i"), model="within", effect="individual")
summary(model_FE)
summary(model_NoFE)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + log(PR) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR), data=dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR), data=dat)
summary(model_NoFE)
log(lamda)
log(lamda)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + lamda + factor(dept), data=dat)
summary(model_NoFE)
library(sjstats)
library(plm)
library(dplyr)
library(robustHD)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd_A.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
head(dat, n=15)
head(dat, n=25)
min(dat$lamda)
max(dat$lamda)
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + lamda + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
anova(model_NoFE)
coff <- coefficients(model_NoFE)
coff
library(sjstats)
library(plm)
library(dplyr)
library(robustHD)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd_A.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
library(sjstats)
library(plm)
library(dplyr)
library(robustHD)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd_A.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
library(sjstats)
library(plm)
library(dplyr)
library(robustHD)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd_A.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + lamda + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) - lamda + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(10 * lamda) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda/10) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda*lamda) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t)  + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + lamda + factor(dept), data=dat)
summary(model_NoFE)
log(
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE
model_NoFE <- lm(z ~ ln_a + tau + I + factor(t) + log(PR) + log(lamda) + factor(dept), data=dat)
summary(model_NoFE)
anova(model_NoFE)
library(sjstats)
library(plm)
library(dplyr)
library(robustHD)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_xd_A.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank)
dat <- na.omit(dat)
# summary(dat)
str(dat)
nrow(dat)
# Model: No FE
model_NoFE <- lm(z ~ log(a) + tau + I + factor(t) + log(PR) + log(lambda) + factor(dept), data=dat)
summary(model_NoFE)
# Model: No FE (Standardized)
std_beta(model_NoFE)
# Or:
model_NoFE_std <- lm(z ~ scale(log(a)) + scale(tau) + scale(I) + factor(t) + scale(log(PR)) + scale(log(lamda)) + factor(dept), data=dat)
# Or:
model_NoFE_std <- lm(z ~ scale(log(a)) + scale(tau) + scale(I) + factor(t) + scale(log(PR)) + scale(log(lambda)) + factor(dept), data=dat)
summary(model_NoFE_std)
# Model: No FE (Standardized)
std_beta(model_NoFE)
# Model: No FE (Standardized)
model_NoFE_std <- std_beta(model_NoFE)
summary(model_NoFE_std)
# Or:
model_NoFE_std <- lm(z ~ scale(log(a)) + scale(tau) + scale(I) + factor(t) + scale(log(PR)) + scale(log(lambda)) + factor(dept), data=dat)
summary(model_NoFE_std)
# Or:
model_NoFE_std <- lm(z ~ scale(log(a)) + scale(tau) + I + factor(t) + scale(log(PR)) + scale(log(lambda)) + factor(dept), data=dat)
summary(model_NoFE_std)
# install.packages('plm')
# install.packages('sjstats')
library(sjstats)
library(plm)
library(dplyr)
dat <- read.csv('./preprocessed/S4S5/panel_model_paper_citations_data_all_A.csv')
print(colnames(dat))
print(nrow(dat))
head(dat)
# Remove row having NA (Ex: pagerank). Only keep 3900 nodes in the network.
dat <- na.omit(dat)
print(nrow(dat))
print(nrow(dat))
# Remove row having NA (Ex: pagerank). Only keep 3900 nodes in the network.
dat <- na.omit(dat)
print(nrow(dat))
# summary(dat)
# str(dat)
# Model: No FE
model_NoFE <- lm(z ~ log(a) + tau + I + factor(t) + log(PR) + log(lambda) + factor(dept), data=dat)
summary(model_NoFE)
dat <- dat %>% filter(PR > 0)
print(nrow(dat))
# summary(dat)
# str(dat)
# Model: No FE
model_NoFE <- lm(z ~ log(a) + tau + I + factor(t) + log(PR) + log(lambda) + factor(dept), data=dat)
summary(model_NoFE)
# Or:
model_NoFE_std <- lm(z ~ scale(log(a)) + scale(tau) + I + factor(t) + scale(log(PR)) + scale(log(lambda)) + factor(dept), data=dat)
summary(model_NoFE_std)
